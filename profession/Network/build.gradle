apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    def versionConfig = rootProject.extensions.getByName("ext")

    compileSdkVersion versionConfig.compileSdkVersion
    buildToolsVersion versionConfig.buildToolsVersion

    defaultConfig {
        minSdkVersion versionConfig.minSdkVersion
        targetSdkVersion versionConfig.targetSdkVersion
        versionCode 2101041
        versionName "1.3.2"
        testInstrumentationRunner versionConfig.testInstrumentationRunner
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //引入 dependencies
    implementation supportDependencies.appcompat
    implementation supportDependencies.multidex
    //引入 dependencies
    implementation dataDependencies.rxJava2
    implementation dataDependencies.rxAndroid2
    implementation dataDependencies.retrofit
    implementation dataDependencies.retrofitConverterGson
    implementation dataDependencies.retrofitAdapterRxJava
    implementation dataDependencies.rxlifecycle
    implementation dataDependencies.gson
    implementation dataDependencies.disklrucache
    implementation dataDependencies.greendao
    //引入 utilDependencies
    implementation utilDependencies.log
    implementation utilDependencies.string
    implementation utilDependencies.file
    implementation utilDependencies.sharedPreference
    //引入 functionDependencies
    implementation functionDependencies.baseNetwork
    implementation functionDependencies.baseApplication
    implementation functionDependencies.resource
    //引入 widgetDependencies
    implementation widgetDependencies.loadDialog
}

def siteUrl = 'https://github.com/tgcityPlum/MavenJcenter' // 项目主页
def gitUrl = 'https://github.com/tgcityPlum/MavenJcenter.git' // 项目的git地址
def repoName = 'profession' // 项目的名称
def moduleName = 'Network' // 项目的名称
group = 'com.tgcity.profession' // 所在组
version = "1.3.2" //aar的版本号

install {
    repositories.mavenInstaller {
// This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                name moduleName
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0' // 开源协议名称
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt' // 协议地址
                    }
                }
                developers {
                    developer {
                        id 'tgcity' // 账号
                        name 'tgcity' // 名称
                        email 'tgcityPlum@gmail.com' // 邮箱地址
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives sourcesJar
}
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
// 读取配置文件中的用户名和key
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = repoName // 你在bintray上创建的库的名称
        name = moduleName // 在jcenter中的项目名称
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}